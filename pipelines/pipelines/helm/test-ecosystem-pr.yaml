#
# Copyright contributors to the Galasa project
#
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-helm
  namespace: galasa-build
spec:
  workspaces:
  - name: git-workspace
  params:
  - name: headRef
    type: string
  - name: headSha
    type: string
  - name: baseRef
    type: string
  - name: prUrl
    type: string
  - name: statusesUrl
    type: string
  - name: issueUrl
    type: string
  - name: userId
    type: string
  - name: prNumber
    type: string
  - name: action
    type: string
#
#
#
  tasks:
  - name: git-verify
    taskRef:
      name: git-verify
    params:
    - name: userId
      value: $(params.userId)
    - name: prUrl
      value: $(params.prUrl)
    - name: action
      value: $(params.action)
#
#
#
  - name: clone-helm
    taskRef:
      name: git-clone
    runAfter:
    - git-verify
    params:
    - name: url
      value: https://github.com/galasa-dev/helm
    - name: revision
      value: $(params.baseRef)
    - name: refspec
      value: refs/pull/$(params.prNumber)/head:refs/heads/$(params.baseRef)
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/helm
    workspaces:
     - name: output
       workspace: git-workspace
#
#
#
  - name: install-ecosystem
    taskRef:
      name: general-command
    runAfter:
    - git-verify
    params:
    - name: context
      value: $(context.pipelineRun.name)/helm/charts
    - name: image
      value: docker.io/alpine/helm:3.12.1
    - name: command
      value:
      - install
      - pr-$(params.headRef)
      - ./ecosystem
      - --namespace
      - galasa-build
      - --set
      - externalHostname=cicsk8sm.hursley.ibm.com
      - --set
      - galasaVersion=main
      - --set
      - galasaRegistry=harbor.galasa.dev/galasadev
      - --set
      - dex.config.issuer=http://cicsk8sm.hursley.ibm.com/dex
      - --wait
    workspaces:
     - name: git-workspace
       workspace: git-workspace
#
#
#
  finally:
  - name: uninstall-ecosystem
    taskRef:
      name: general-command
    params:
    - name: context
      value: $(context.pipelineRun.name)/helm
    - name: image
      value: docker.io/alpine/helm:3.12.1
    - name: command
      value:
      - uninstall
      - pr-$(params.headRef)
    workspaces:
     - name: git-workspace
       workspace: git-workspace
#
#
#
  - name: git-status
    when:
      - input: "$(tasks.git-verify.status)"
        operator: in
        values: ["Succeeded"]
    taskRef:
      name: git-status
    params:
    - name: status
      value: $(tasks.status)
    - name: prUrl
      value: $(params.prUrl)
    - name: statusesUrl
      value: $(params.statusesUrl)
    - name: issueUrl
      value: $(params.issueUrl)
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
