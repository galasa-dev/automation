#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: main-automation
  namespace: galasa-pipelines
spec:
  workspaces:
  - name: git-workspace
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: go-build-ghverify
    taskRef:
      name: go-build
    runAfter:
      - clone-automation
    params:
    - name: GOPATH
      value: $(context.pipelineRun.name)/automation/build-images/github-verify
    - name: goArgs
      value:
      - build
      - -o
      - bin/ghverify
      - cmd/main.go  
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: build-ghverify-image
    taskRef:
      name: docker-build
    runAfter:
    - go-build-ghverify
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/build-images/github-verify
    - name: dockerfilePath
      value: automation/dockerfiles/common/ghgverify-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/ghverify:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: go-build-ghstatus
    taskRef:
      name: go-build
    runAfter:
      - clone-automation
    params:
    - name: GOPATH
      value: $(context.pipelineRun.name)/automation/build-images/github-status
    - name: goArgs
      value:
      - build
      - -o
      - bin/ghstatus
      - cmd/main.go  
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: build-ghgstatus-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/build-images/github-status
    - name: dockerfilePath
      value: automation/dockerfiles/common/ghgstatus-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/ghstatus:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: build-gpg-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/common
    - name: dockerfilePath
      value: automation/dockerfiles/common/gpg-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/gpg:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: build-kubectl-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/common
    - name: dockerfilePath
      value: automation/dockerfiles/common/kubectl-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/kubectl:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  - name: build-gitcli-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/common
    - name: dockerfilePath
      value: automation/dockerfiles/common/gitcli-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/gitcli:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace  

  finally:
  - name: git-clean
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: git-workspace
       workspace: git-workspace
