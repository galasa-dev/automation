#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-web-ui
  namespace: galasa-build
  # Tell ArgoCD never to prune this pipeline definition.
  annotations:
    argocd.argoproj.io/sync-options: Prune=false
spec:
  workspaces:
  - name: git-workspace
  params:
  - name: headRef
    type: string
  - name: headSha
    type: string
  - name: baseRef
    type: string
  - name: prUrl
    type: string
  - name: statusesUrl
    type: string
  - name: issueUrl
    type: string
  - name: userId
    type: string
  - name: prNumber
    type: string
  - name: action
    type: string
  tasks:

  #----------------------------------------------------------------
  - name: git-verify
    taskRef:
      name: git-verify
    params:
    - name: userId
      value: $(params.userId)
    - name: prUrl
      value: $(params.prUrl)
    - name: action
      value: $(params.action)

  #----------------------------------------------------------------
  - name: clone-webui
    taskRef: 
      name: git-clone
    runAfter:
    - git-verify  
    params:
    - name: url
      value: https://github.com/galasa-dev/webui
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/webui
    workspaces:
     - name: output
       workspace: git-workspace
  #----------------------------------------------------------------
  # run unit tests
  - name: test-webui
    taskRef: 
      name: general-command
    runAfter:
    - clone-webui
    params:
    - name: context
      value: $(context.pipelineRun.name)/webui
    - name: image
      value:  docker.io/library/node:16.20-bookworm     
    - name: command
      value:
        - npm 
        - test
        - -- 
        - --watchAll=false
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  #----------------------------------------------------------------
  # Build docker image
  - name: docker-build-webui
    taskRef: 
      name: docker-build
    runAfter:
    - test-webui
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-ui:$(params.headSha)
    - name: context
      value: $(context.pipelineRun.name)/web-ui/
    - name: noPush
      value: "--no-push"
    - name: dockerfilePath
      value: $(context.pipelineRun.name)/webui/galasa-ui/Dockerfile
    workspaces:
     - name: git-workspace
       workspace: git-workspace
#----------------------------------------------------------------
  # Tell the pull request the build succeeded/failed.
  - name: git-status
    when:
      - input: "$(tasks.git-verify.status)"
        operator: in
        values: ["Succeeded"]
    taskRef:
      name: git-status
    params:
    - name: status
      value: $(tasks.status)
    - name: prUrl
      value: $(params.prUrl)
    - name: statusesUrl
      value: $(params.statusesUrl)
    - name: issueUrl
      value: $(params.issueUrl)
    - name: pipelineRunName
      value: $(context.pipelineRun.name)  