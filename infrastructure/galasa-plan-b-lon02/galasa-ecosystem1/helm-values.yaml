#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
# ------------------------------------------------------------------------------------------------
#
# The values in this file are used to configure the "ecosystem1" Galasa service.
# These values act as overrides for the default values provided in the service's Helm chart.
# To view the values currently in use by ecosystem1, check that your Kubernetes context is 
# set to the cluster and namespace where ecosystem1 is installed and run the following command:
#
# helm get values main-ecosystem --all
#
# ------------------------------------------------------------------------------------------------

#
# The external hostname that the Galasa services can be accessed on via Ingress,
# must be a valid DNS hostname without a URL scheme (i.e. without "https://").
#
externalHostname: "galasa-ecosystem1.galasa.dev"
#
# The version of Galasa you want to run with, it is better that you do not use "latest" to ensure
# all the components are running the same version and a controlled upgrade can be performed
#
galasaVersion: "main"
#
#
# Name of the galasa service which will be shown as the title of the web user interface page.
# Any bookmarks taken by users in their browsers will also receive this name.
# Making this name distict helps users identify which Galasa service they are using.
# If they are all called the same thing, users with access to multiple systems may find that 
# confusing.
# It is RECOMMENDED that this value is changed to be unique,
# For example: Galasa Service XYZ
galasaServiceName: "Galasa Ecosystem 1"
#
#
# The container registry the Galasa images can be found in
#
galasaRegistry: "ghcr.io/galasa-dev"
# 
# 
# The name of the Docker image that contains Galasa's boot.jar file to launch ecosystem services
#
galasaBootImage: "galasa-boot-embedded"
#
#
# The name of the Docker image that launches Galasa's web UI
#
galasaWebUiImage: "webui"
#
#
# The pull policy to be used for the Galasa images, only useful for Galasa development purposes
#
pullPolicy: "Always"
#
#
# The architecture the pods will be run on, at the moment, only adm64 is supported
#
architecture: amd64
#
#
# Values to enable and configure the use of ingress
# Note: The externalHostname value must be a valid DNS name for ingress to be used.
#
ingress:
  # The IngressClass to use for ingresses
  ingressClassName: "public-iks-k8s-nginx"

  # Values to configure the use of TLS in ingresses. For example:
  # tls:
  #   - hosts:
  #     - "*.example.com"
  #     secretName: mysecret
  tls:
    - hosts:
      - "galasa-ecosystem1.galasa.dev"
      secretName: ecosystem1-tls-secret

  # The name of the Secret containing root and intermediate CA certificates in a single .pem file
  caCertSecretName: ""

  # Annotations to be added to ingresses. For example:
  # annotations:
  #   nginx.ingress.kubernetes.io/proxy-body-size: "0"
  #   nginx.ingress.kubernetes.io/ssl-redirect: "true"
  annotations: {}
#
#
# Values to configure the ecosystem's use of Dex
#
dex:
  # `configSecret` contains values as to whether a new Kubernetes Secret containing the Dex configuration
  # should be created, or if an existing Secret containing should be used.
  configSecret:
    # Enables the creation of a Kubernetes Secret using the values provided in `config` if set to true.
    # If set to false, you must provide a value for `secretName` that corresponds to an existing Secret.
    create: true

    # The name of the Kubernetes Secret containing the Dex configuration to mount within the Dex deployment.
    # `secretName` must point to a Secret containing a "config.yaml" key and a valid Dex configuration in YAML format.
    # If `secretName` is provided and `create` is set to true, then the given name will be ignored and a new Secret
    # named "<release-name>-dex-config" will be created.
    secretName: ""

  # `envFrom` represents a list of additional environment variables mounted from Kubernetes Secrets or ConfigMaps.
  # If you would like to mount an additional environment variable from a Secret or ConfigMap, provide the name of the
  # resource in the `envFrom` list. For example:
  # envFrom:
  #   - secretRef:
  #       name: github-oauth-app-secret
  #   - configMapRef:
  #       name: my-env-configmap
  envFrom:
    - secretRef:
        name: galasa-ecosystem1-github-oauth-app-for-dex
    - secretRef:
        name: galasa-ecosystem1-dex-webui-client

  # An ordered list of JSON Web Token (JWT) claims to use when Galasa sets the requestor of a test.
  # The first JWT claim that is matched will be used as the requestor of a test.
  usernameClaims:
    - preferred_username
    - name
    - sub

  # The Dex configuration - See the [Dex documentation](https://dexidp.io/docs) for more information.
  # By default, etcd is used as the storage option for the Galasa Ecosystem.
  config:
    issuer: "https://galasa-ecosystem1.galasa.dev/dex"

    connectors:
    - type: github
      id: github
      name: GitHub
      config:
        clientID: $githubOAuthAppClientId
        clientSecret: $githubOAuthAppClientSecret
        redirectURI: https://galasa-ecosystem1.galasa.dev/dex/callback
        orgs:
        - name: galasa-dev
          teams:
          - galasa-ecosystem1-users

    # OAuth 2.0 configuration values
    oauth2:
      skipApprovalScreen: true

    # A list of known clients that authenticate with Dex
    staticClients:
    - id: galasa-webui
      redirectURIs:
      - 'https://galasa-ecosystem1.galasa.dev/api/auth/callback'
      name: 'Galasa Ecosystem Web UI'
      # Use the webui client secret drawn from the secret mounted in envFrom
      secretEnv: webuiClientSecret

    # Token expiry configuration
    expiry:
      idTokens: 24h
      refreshTokens:
        reuseInterval: 8760h # 1 year
        validIfNotUsedFor: 8760h # 1 year
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"


#
#
# Values to configure the API server
#
apiServer:
  #
  #
  # The number of API server replicas to deploy. This value is overridden when autoscaling is enabled.
  #
  replicaCount: 2
  #
  #
  # The requests and limits to apply to resources, like CPU and memory, that the API server container consumes.
  # See https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/ for details on resource management in Kubernetes Pods.
  #
  # For example, to assign 2 CPU cores and 512MB of memory to the API server, with a limit of up to 3 CPU cores and 1024MB of memory:
  # resources:
  #   requests:
  #     cpu: "2"
  #     memory: "512Mi"
  #   limits:
  #     cpu: "3"
  #     memory: "1024Mi"
  #
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "500Mi"
    limits:
      memory: "800Mi"

  #
  # Values to configure autoscaling for the API server. Important: Resource requests must be defined via the `resources` value in order
  # for autoscaling to work properly.
  #
  autoscaling:
    #
    # Enables or disables autoscaling
    enabled: true
    #
    # The minimum number of API server replicas that should be deployed
    minReplicas: 1
    #
    # The maximum number of API server replicas that should be deployed
    maxReplicas: 10
    #
    # The target percentage of CPU utilization to consider when autoscaling.
    # For example: `targetCPU: "50"` indicates that the autoscaler may increase the number of replicas when CPU utilization
    # exceeds 50%. Similarly, when CPU utilization drops below 50%, the autoscaler may decrease the number of replicas.
    targetCPUPercentageUsed: "50"
    #
    # The target percentage of memory utilization to consider when autoscaling.
    # For example: `targetMemory: "50"` indicates that the autoscaler may increase the number of replicas when memory utilization
    # exceeds 50%. Similarly, when memory utilization drops below 50%, the autoscaler may decrease the number of replicas.
    targetMemoryPercentageUsed: "50"

  #
  #
  # The Kubernetes annotations to apply to the Galasa API server's ingress resource alongside the global annotations provided via the `ingress.annotations` value.
  # By default, a rate limit of 1000 requests from a given IP per second is applied to the API server's ingress, using the nginx ingress controller.
  #
  ingressAnnotations:
    nginx.ingress.kubernetes.io/limit-rps: "1000"
  #
  #
  # A list of origins that are allowed to receive responses from the Galasa API server.
  # To limit the origins to a set of domains, you can use a wildcard (*) value.
  #
  # For example, to allow all subdomains of example.com, you can use the following value:
  # allowedOrigins:
  #   - "*.example.com"
  #
  # By default, all origins are allowed.
  #
  allowedOrigins:
    - "*"

#
# The values below allow the location of the ETCD stores, DSS, CREDS, and CPS,
# to be configurable. There is a separate URL for each store as you may want to
# use the default store location for CPS and CREDS, but not for DSS, for example.
#
# If using the defaults below, RELEASE_NAME is replaced with {{ .Release.Name }}
# when used in templates. If you override these default values with your own store
# location, you do not have to include the release name in your store's URL.
#
# The "etcd:" prefix is appended in the templates so it should not be included here.
#
dssUrl: http://RELEASE_NAME-etcd:2379
credsUrl: http://RELEASE_NAME-etcd:2379
cpsUrl: http://RELEASE_NAME-etcd:2379
#
#
# cleanupMonitor represents the values required to configure a custom resource cleanup
# monitor for use by the Galasa service, so that resources provisioned by managers that
# are not publicly available in the Galasa open source offering can be cleaned up.
#
cleanupMonitor:
  #
  # The name of the stream in which custom resource cleanup providers can be located.
  stream: ""
  #
  # A list of glob patterns to be used in identifying which resource cleanup providers
  # to load as part of the custom resource cleanup monitor.
  #
  # Supported glob patterns include the following special characters:
  # '*' (wildcard) Matches zero or more characters
  # '?' matches exactly one character
  #
  # For example, the pattern 'dev.galasa*' will match any monitor that includes 'dev.galasa' as its prefix,
  # so a class like 'dev.galasa.core.CoreResourceMonitorClass' will be matched.
  #
  # A pattern like '*MyResourceMonitorClass' will match any monitor that ends with 'MyResourceMonitorClass',
  # such as 'my.company.monitors.MyResourceMonitorClass'.
  includes: []
  #
  # A list of glob patterns to be used in identifying which resource cleanup providers
  # should not be loaded as part of the custom resource cleanup monitor.
  #
  # Supported glob patterns include the following special characters:
  #
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # Omitting this resources: section will cause no memory or cpi limits to be set.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"
#
#
# resourceMonitor represents the values used to configure the system resource cleanup 
# monitor used by the Galasa service. Only the monitors that are available in the
# dev.galasa.uber.OBR bundle can be included and excluded. For custom monitors,
# see the 'cleanupMonitor' values.
#
resourceMonitor:
  #
  # A list of glob patterns to be used in identifying which resource cleanup providers to load.
  #
  # Supported glob patterns include the following special characters: 
  # '*' (wildcard) Matches zero or more characters
  # '?' matches exactly one character
  #
  # For example, the pattern 'dev.galasa*' will match any provider that includes 'dev.galasa' as its prefix,
  # so a class like 'dev.galasa.core.CoreResourceMonitorClass' will be matched.
  #
  # By default, all of the providers matching 'dev.galasa.*' are included.
  includes:
    - 'dev.galasa.*'
  #
  # A list of glob patterns to be used in identifying which resource cleanup providers
  # should not be loaded.
  #
  # Supported glob patterns include the following special characters: 
  # '*' (wildcard) Matches zero or more characters
  # '?' matches exactly one character
  #
  # For example, the pattern '*' will match any monitor, so a class like 'dev.galasa.core.CoreResourceMonitorClass'
  # will be matched.
  #
  # A pattern like '*MyResourceMonitorClass' will match any monitor that ends with 'MyResourceMonitorClass',
  # such as 'my.company.monitors.MyResourceMonitorClass'.
  excludes: []
  #
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # Omitting this resources: section will cause no memory or cpi limits to be set.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"

# The etcd pod houses the configuration property store, credentials store and the dynamic storage service.
etcd:
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "1000Mi"
    limits:
      memory: "1500Mi"

# The webui pod houses the web user interface.
webui:
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "400Mi"

# The engine controller receives requests to start tests, and starts pods in which
# the tests run.
enginecontroller:
  # Maximum number a run will re-try to create a test pod.
  maxPodRetryLimit: 5
  
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"

# The resource monitor is a component which monitors for failed/dead tests
# and cleans up resources as required.
resourcemonitor:
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"

# The couchdb component stores run history and records, user records and other
# persistent storage objects.
couchdb:
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"

# The metrics component gathers metrics from other components in the system.
metrics:
  # Best practice is to set memory limits for each pod.
  # This section sets some limits which Dex should be happy working within.
  # This default is suitable for a lightly loaded Galasa service:
  resources:
    requests:
      memory: "300Mi"
    limits:
      memory: "500Mi"

# Best practice is to set memory limits for each pod.
# So we need to set 4 things:
# - The amount of cpu and memory requested for the pod immediately
# - The amount of CPU and memory that the pod can grow to use
# - The value that the MAX_HEAP env var should be set to for the JVM when it starts inside the pod
# These values are placed in the config map which is loaded into settings in the engine controller, which
# uses them to launch pods.
testPod:
  memory:
    # All values are integers, in units of 'Mi'
    heap: 450
    min: 400
    max: 800
  cpu:
    # All values are integers, in units of 'm'
    # A value of 0 indicates no CPU minimum should be set.
    min: 0
    # A value of 0 indicates no CPU maximum should be set.
    max: 0

  
