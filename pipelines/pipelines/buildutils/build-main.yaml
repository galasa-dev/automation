#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: main-buildutils
  namespace: galasa-pipelines
spec:
  workspaces:
  - name: git-workspace
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: clone-buildutils
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/buildutils
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/buildutils
    workspaces:
     - name: output
       workspace: git-workspace 
  - name: go-make
    taskRef:
      name: go-make
    runAfter:
      - clone-buildutils  
    params:
    - name: directory
      value: $(context.pipelineRun.name)/buildutils
    workspaces:
     - name: git-workspace
       workspace: git-workspace 
  - name: build-galasabld-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    - go-make
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/buildutils
    - name: dockerfilePath
      value: automation/dockerfiles/galasabld/galasabld-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasabld:main
    - name: noPush
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=platform=linux-amd64"
    workspaces:
     - name: git-workspace
       workspace: git-workspace 
  finally:
  - name: git-clean-automation
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: git-workspace
       workspace: git-workspace  
  - name: git-clean-buildutils
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/buildutils
    workspaces:
     - name: git-workspace
       workspace: git-workspace
