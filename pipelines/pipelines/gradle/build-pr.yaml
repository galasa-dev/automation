#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-gradle
  namespace: galasa-pipelines
spec:
  workspaces:
  - name: git-workspace
  params:
  - name: headRef
    type: string
  - name: headSha
    type: string
  - name: baseRef
    type: string
  - name: prUrl
    type: string
  - name: statusesUrl
    type: string
  - name: issueUrl
    type: string
  - name: userId
    type: string
  - name: prNumber
    type: string
  - name: action
    type: string
  tasks:
  - name: git-verify
    taskRef:
      name: git-verify
    params:
    - name: userId
      value: $(params.userId)
    - name: prUrl
      value: $(params.prUrl)
    - name: action
      value: $(params.action)
  - name: clone-automation
    taskRef: 
      name: git-clone
    runAfter:
      - git-verify
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: clone-gradle
    taskRef: 
      name: git-clone
    runAfter:
      - git-verify
    params:
    - name: url
      value: https://github.com/galasa-dev/gradle
    - name: revision
      value: $(params.baseRef)
    - name: refspec
      value: refs/pull/$(params.prNumber)/head:refs/heads/$(params.baseRef)
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/gradle
    workspaces:
     - name: output
       workspace: git-workspace
  - name: get-commit
    taskRef:
      name: get-commit
    runAfter:
    - clone-gradle
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: repo
      value: gradle
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: gradle-build-gradle
    taskRef:
      name: gradle-build
    runAfter: 
      - clone-gradle
    params:
    - name: context
      value: $(context.pipelineRun.name)/gradle
    - name: buildArgs
      value:
        - "-PsourceMaven=https://repo.maven.apache.org/maven2/"
        - "-PcentralMaven=https://repo.maven.apache.org/maven2/"
        - "-PtargetMaven=/workspace/git/$(context.pipelineRun.name)/gradle/repo"
    - name: command
      value: publish
    workspaces:
     - name: git-workspace
       workspace: git-workspace  
  - name: docker-build-gradle
    taskRef:
      name: docker-build
    runAfter: 
      - get-commit
      - gradle-build-gradle
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/gradle
    - name: dockerfilePath
      value: automation/dockerfiles/gradle/gradle-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-gradle:$(params.headSha)  
    - name: noPush  
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=tag=main"
        - "--build-arg=dockerRepository=harbor.galasa.dev"
    workspaces:
      - name: git-workspace
        workspace: git-workspace  
  finally:
  - name: git-status
    when:
      - input: "$(tasks.git-verify.status)"
        operator: in
        values: ["Succeeded"]
    taskRef:
      name: git-status
    params:
    - name: status
      value: $(tasks.status)
    - name: prUrl
      value: $(params.prUrl)
    - name: statusesUrl
      value: $(params.statusesUrl)
    - name: issueUrl
      value: $(params.issueUrl)
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
  - name: git-clean-automation
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: git-clean-gradle
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/gradle
    workspaces:
     - name: git-workspace
       workspace: git-workspace