#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: cli-snapshot-main-to-prod
  namespace: galasa-build
spec:
  params:
  - name: fromBranch
    type: string
    default: main
  - name: toBranch
    type: string
    default: prod
  - name: imageTag
    type: string
    default: prod
  - name: appname
    type: string
    default: prod-cli
  workspaces:
  - name: git-workspace
# 
# 
#
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
# 
# 
#
  - name: snapshot-cli-binaries
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation  
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name) 
    - name: context
      value: $(context.pipelineRun.name) 
    - name: dockerfilePath
      value: automation/dockerfiles/snapshots/repo-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-cli-binary-downloadables:$(params.imageTag)
    - name: noPush
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=dockerRepository=harbor.galasa.dev"         
        - "--build-arg=image=galasa-cli-binary-downloadables"   
        - "--build-arg=oldBranch=$(params.fromBranch)"   
        - "--build-arg=branch=$(params.toBranch)"   
    workspaces:
     - name: git-workspace
       workspace: git-workspace     
# 
# 
#
  - name: recycle-cli-binaries
    taskRef:
      name: argocd-cli
    runAfter:
    - snapshot-cli-binaries
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - actions 
      - run 
      - $(params.appname)
      - restart 
      - --kind 
      - Deployment
      - --resource-name
      - cli-$(params.imageTag)
# 
# 
#
  - name: wait-cli-binaries
    taskRef:
      name: argocd-cli
    runAfter:
    - recycle-cli-binaries
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - wait
      - $(params.appname)
      - --resource
      - apps:Deployment:cli-$(params.imageTag)
      - --health 
# 
# 
# 
  - name: snapshot-cli-executable
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation  
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name) 
    - name: context
      value: $(context.pipelineRun.name) 
    - name: dockerfilePath
      value: automation/dockerfiles/snapshots/generic-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-cli-amd64:$(params.imageTag)
    - name: noPush
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=dockerRepository=harbor.galasa.dev"         
        - "--build-arg=image=galasa-cli-amd64"   
        - "--build-arg=oldBranch=$(params.fromBranch)"     
    workspaces:
     - name: git-workspace
       workspace: git-workspace
# 
# 
# 
  - name: snapshot-cli-ibm-executable
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation  
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name) 
    - name: context
      value: $(context.pipelineRun.name) 
    - name: dockerfilePath
      value: automation/dockerfiles/snapshots/generic-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-cli-ibm-amd64:$(params.imageTag)
    - name: noPush
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=dockerRepository=harbor.galasa.dev"         
        - "--build-arg=image=galasa-cli-ibm-amd64"   
        - "--build-arg=oldBranch=$(params.fromBranch)" 
    workspaces:
     - name: git-workspace
       workspace: git-workspace