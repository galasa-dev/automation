#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

# This EventListener triggers the test-cli-ecosystem-commands Tekton pipeline
# after the GitHub Actions CLI build.yml workflow ran successfully.
# The GitHub workflow handles local CLI commands but ecosystem CLI commands
# must be tested on Tekton inside the IBM firewall while we use prod1 for testing.

apiVersion: triggers.tekton.dev/v1beta1
kind: EventListener
metadata:
  name: github-cli-workflow-completed-listener
  annotations:
    tekton.dev/payload-validation: "false"
spec:
  serviceAccountName: tekton-trigger
  triggers:
    - name: gitlab-push-events-trigger
      interceptors:
        - name: "validate GitHub payload and filter on eventType"
          ref:
            name: "github"
          params:
          - name: "eventTypes"
            value: ["workflow_run"]
        - name: "CEL filter: only when the workflow run was completed"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.action in ['completed']"
        - name: "CEL filter: only when the workflow run was successful"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.workflow_run.conclusion in ['success']"
        - name: "CEL filter: only when the workflow was for the CLI repository"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.repository.name in ['cli']"
        # This avoids the Tekton pipeline being triggered after the GitHub Actions CLI PR build workflow
        - name: "CEL filter: only when the workflow file is 'build.yml'"
          ref:
            name: "cel"
          params:
          - name: "filter"
            value: "body.workflow_run.path in ['.github/workflows/build.yml']"

      bindings:
        - name: branch
          value: $(body.workflow_run.head_branch)
       
      template:
        spec:
          params:
            - name: branch
          resourcetemplates:
            - apiVersion: tekton.dev/v1beta1
              kind: PipelineRun
              metadata:
                generateName: test-cli-ecosystem-commands-
              spec:
                pipelineRef:
                  name: test-cli-ecosystem-commands
                serviceAccountName: galasa-build-bot
                workspaces:
                - name: git-workspace
                  volumeClaimTemplate:
                    spec:
                      storageClassName: longhorn-temp
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 20Gi
                params:
                  - name: branch
                    value: $(tt.params.branch)