#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-githubapp-copyright
  namespace: galasa-build
spec:
  params:
  - name: headRef
    type: string
  - name: headSha
    type: string
  - name: baseRef
    type: string
  - name: prUrl
    type: string
  - name: statusesUrl
    type: string
  - name: issueUrl
    type: string
  - name: userId
    type: string
  - name: prNumber
    type: string
  - name: action
    type: string
  workspaces:
  - name: git-workspace
# 
# 
#
  tasks:
  - name: git-verify
    taskRef:
      name: git-verify
    params:
    - name: userId
      value: $(params.userId)
    - name: prUrl
      value: $(params.prUrl)
    - name: action
      value: $(params.action)
# 
# 
# 
  - name: clone-githubapp-copyright
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/githubapp-copyright
    - name: revision
      value: $(params.baseRef)
    - name: refspec
      value: refs/pull/$(params.prNumber)/head:refs/heads/$(params.baseRef)
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/githubapp-copyright
    workspaces:
     - name: output
       workspace: git-workspace 
#
#
#
  - name: githubapp-copyright-make
    taskRef: 
      name: make
    runAfter: 
    - clone-githubapp-copyright
    params:
    - name: directory
      value: $(context.pipelineRun.name)/githubapp-copyright
    workspaces:
     - name: git-workspace
       workspace: git-workspace
# 
# 
#
  - name: docker-build-githubapp-copyright
    taskRef:
      name: docker-build
    runAfter:
    - githubapp-copyright-make
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/githubapp-copyright
    - name: dockerfilePath
      value: githubapp-copyright/Dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/githubapp-copyright:$(params.headSha)
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace
#
#
#
  finally:

  - name: git-status
    when:
      - input: "$(tasks.git-verify.status)"
        operator: in
        values: ["Succeeded"]
    taskRef:
      name: git-status
    params:
    - name: status
      value: $(tasks.status)
    - name: prUrl
      value: $(params.prUrl)
    - name: statusesUrl
      value: $(params.statusesUrl)
    - name: issueUrl
      value: $(params.issueUrl)
    - name: pipelineRunName
      value: $(context.pipelineRun.name) 