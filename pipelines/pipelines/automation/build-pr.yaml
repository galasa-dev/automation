#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: pr-automation
  namespace: galasa-pipelines
spec:
  workspaces:
  - name: git-workspace
  params:
  - name: userId
    type: string
  - name: prUrl
    type: string
  - name: action
    type: string
  - name: head-ref
    type: string
  - name: base-ref
    type: string
  - name: pr-number
    type: string
  tasks:
  - name: git-verify
    taskRef:
      name: git-verify
    params:
    - name: userId
      value: $(params.userId)
    - name: prUrl
      value: $(params.prUrl)
    - name: action
      value: $(params.action)
  - name: git-clone
    taskRef: 
      name: git-clone
    runAfter:
      - git-verify
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: $(params.head-ref)
    - name: refspec
      value: refs/pulls/$(params.pr-number):refs/heads/$(params.base-ref)
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: build-ghgverify-image
    taskRef:
      name: docker-build
    runAfter:
    - git-clone
    params:
    - name: context
      value: $(context.pipelineRun.name)/automation/build-images/github-verify
    - name: dockerfilePath
      value: $(context.pipelineRun.name)/automation/dockerfiles/build-images/ghgverify-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/ghgverify:latest
    - name: noPush
      value: --no-push
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  finally:
  # - name: git-status
  - name: git-clean
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: git-workspace
       workspace: git-workspace