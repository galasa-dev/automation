#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: simple
  namespace: galasa-build
spec:
  params:
  - name: imageTag
    type: string
    default: main
  workspaces:
  - name: git-workspace
# 
# 
# 
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
# 
# 
# 
  - name: docker-build-push
    taskRef:
      name: docker-build
    runAfter:
      - branch-maven-build-inttests
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)
    - name: dockerfilePath
      value: automation/dockerfiles/simple/Dockerfile
    - name: imageName
      value: harbor.galasa-plan-b-lon02-3fdc13787e8248a7d32fa4e5af5b0294-0000.eu-gb.containers.appdomain.cloud/galasadev/simple:$(params.imageTag)
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace
# 
# 
# 
#   - name: recycle-deployment
#     taskRef:
#       name: argocd-cli
#     runAfter:
#     - branch-docker-build-inttests
#     params:
#     - name: server
#       value: argocd.galasa.dev
#     - name: command
#       value: 
#       - app 
#       - actions 
#       - run 
#       - $(params.appname)
#       - restart
#       - --kind 
#       - Deployment
#       - --resource-name
#       - inttests-$(params.imageTag)
# # 
# # 
# # 
#   - name: wait-deployment
#     taskRef:
#       name: argocd-cli
#     runAfter:
#     - recycle-deployment
#     params:
#     - name: server
#       value: argocd.galasa.dev
#     - name: command
#       value: 
#       - app 
#       - wait
#       - $(params.appname)
#       - --resource
#       - apps:Deployment:inttests-$(params.imageTag)
#       - --health

#     when:
#       - input: "$(params.branch)"
#         operator: in
#         values: ["main"]
#     taskRef:
#       name: tkn-cli
#     runAfter:
#     - wait-deployment
#     params:
#     - name: context
#       value: $(context.pipelineRun.name)/automation
#     - name: command
#       value: 
#       - pipeline
#       - start
#       - inttests-snapshot-main-to-prod
#       - -n
#       - galasa-build
#       - --prefix-name 
#       - inttests-snapshot
#       - --use-param-defaults
#       - --workspace
#       - name=git-workspace,volumeClaimTemplateFile=./pipelines/templates/git-workspace-template.yaml
#       - --pod-template
#       - ./pipelines/templates/pod-template.yaml
#       - --serviceaccount
#       - galasa-build-bot
#     workspaces:
#      - name: git-workspace
#        workspace: git-workspace
