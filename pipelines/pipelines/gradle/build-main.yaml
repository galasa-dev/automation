#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: main-gradle
  namespace: galasa-build
spec:
  workspaces:
  - name: git-workspace
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: clone-gradle
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/gradle
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/gradle
    workspaces:
     - name: output
       workspace: git-workspace  
  - name: get-commit
    taskRef:
      name: get-commit
    runAfter:
    - clone-gradle
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: repo
      value: gradle
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: main-gradle-build-gradle
    taskRef:
      name: gradle-build
    runAfter: 
      - clone-gradle
    params:
    - name: context
      value: $(context.pipelineRun.name)/gradle
    - name: buildArgs
      value:
        - "-PsourceMaven=https://repo.maven.apache.org/maven2/"
        - "-PcentralMaven=https://repo.maven.apache.org/maven2/"
        - "-PtargetMaven=/workspace/git/$(context.pipelineRun.name)/gradle/repo"
    - name: command
      value: publish
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: main-docker-build-gradle
    taskRef:
      name: docker-build
    runAfter:
      - get-commit
      - main-gradle-build-gradle
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/gradle
    - name: dockerfilePath
      value: automation/dockerfiles/gradle/gradle-dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-gradle:main
    - name: noPush
      value: ""
    - name: buildArgs
      value:
        - "--build-arg=tag=main"
        - "--build-arg=dockerRepository=harbor.galasa.dev"
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: recycle-deployment
    taskRef:
      name: argocd-cli
    runAfter:
    - main-docker-build-gradle
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - actions 
      - run 
      - development-repo-main
      - restart
      - --kind 
      - Deployment
      - --resource-name
      - gradle 
  - name: wait-deployment
    taskRef:
      name: argocd-cli
    runAfter:
    - recycle-deployment
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - wait
      - development-repo-main
      - --resource
      - apps:Deployment:gradle 
      - --health

  # Commenting out for now, until we decide whether to stay with VolumeClaimTemplate per PRun or go back to PVC
  # finally:
  # - name: git-clean
  #   taskRef: 
  #     name: git-clean
  #   params:
  #   - name: subdirectory
  #     value: $(context.pipelineRun.name)
  #   workspaces:
  #    - name: git-workspace
  #      workspace: git-workspace