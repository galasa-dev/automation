#
# Copyright contributors to the Galasa project 
# 
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: main-automation
  namespace: galasa-pipelines
spec:
  workspaces:
  - name: git-workspace
  params:
  - name: commit-sha
    type: string
  - name: merge-sha
    type: string
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: build-ghgverify-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/build-images/github-verify
    - name: dockerfilePath
      value: automation/dockerfiles/common/ghgverify-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/ghgverify:main
    - name: noPush
      value: --no-push
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: build-ghgstatus-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/build-images/github-status
    - name: dockerfilePath
      value: automation/dockerfiles/common/ghgstatus-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/ghgstatus:main
    - name: noPush
      value: --no-push
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: build-gpg-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/common
    - name: dockerfilePath
      value: automation/dockerfiles/common/gpg-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/gpg:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  - name: build-kubectl-image
    taskRef:
      name: docker-build
    runAfter:
    - clone-automation
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/automation/common
    - name: dockerfilePath
      value: automation/dockerfiles/common/kubectl-dockerfile
    - name: imageName
      value: harbor.galasa.dev/common/kubectl:main
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace
  finally:
  - name: git-clean
    taskRef: 
      name: git-clean
    params:
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: git-workspace
       workspace: git-workspace