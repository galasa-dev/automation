#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: run-tests
  namespace: galasa-build
spec:
  workspaces:
  - name: git-workspace
  params:
  tasks:
  - name: clone-automation
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/automation
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/automation
    workspaces:
     - name: output
       workspace: git-workspace
  - name: run-prepare
    taskRef: 
      name: galasactl
    runAfter:
    - clone-automation 
    params:
    - name: context
      value: $(context.pipelineRun.name)
    - name: command
      value:
        - runs 
        - prepare 
        - --bootstrap 
        - https://galasa-galasa-prod.cicsk8s.hursley.ibm.com/bootstrap 
        - --stream 
        - inttests 
        - --portfolio 
        - test.yaml 
        - --test 
        - local.CoreLocalJava11Ubuntu
        - --log
        - '-'
    workspaces:
     - name: git-workspace
       workspace: git-workspace   
  - name: run-submit
    taskRef: 
      name: galasactl
    runAfter:
    - run-prepare
    params:
    - name: context
      value: $(context.pipelineRun.name)
    - name: command
      value:
        - runs 
        - submit 
        - --bootstrap 
        - https://galasa-galasa-prod.cicsk8s.hursley.ibm.com/bootstrap 
        - --portfolio 
        - /workspace/git/$(context.pipelineRun.name)/test.yaml 
        - --throttle 
        - '10' 
        - --poll 
        - '10' 
        - --progress 
        - '1' 
        - --override 
        - galasaecosystem.runtime.repository=https://development.galasa.dev/integration/maven-repo/obr/
        - --override 
        - galasaecosystem.docker.version=integration 
        - --reportyaml 
        - tests.yaml 
        - --reportjson 
        - tests.json 
        - --reportjunit 
        - junit.xml
        - --log
        - '-'
    workspaces:
     - name: git-workspace
       workspace: git-workspace       

  - name: trigger-integration-to-prod
    taskRef:
      name: tkn-cli
    runAfter:
    - run-submit
    params:
    - name: context
      value: $(context.pipelineRun.name)/automation
    - name: command
      value: 
      - pipeline
      - start
      - integration-to-prod
      - -n
      - galasa-build
      - --prefix-name 
      - trigger-integration-to-prod
      - --use-param-defaults
      - --workspace
      - name=git-workspace,volumeClaimTemplateFile=./pipelines/templates/git-workspace-template.yaml
      - --pod-template
      - ./pipelines/templates/pod-template.yaml
      - --serviceaccount
      - galasa-build-bot
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  finally:
  - name: report-failed-build
    when:
      - input: "$(tasks.status)"
        operator: in
        values: ["Failed"]
    taskRef:
      name: slack-post
    params:
    - name: repo
      value: "run-tests"
    - name: pipelineRunName
      value: $(context.pipelineRun.name)