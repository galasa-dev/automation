#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#
name: Helm build (ecosystem1)

on:
  workflow_dispatch:

env:
  NAMESPACE: galasa-dev
  BRANCH: ${{ github.ref_name }}

jobs:
  build-helm:
    # Skip this job for forks
    if: ${{ github.repository_owner == 'galasa-dev' }}
    name: Build Helm chart for ecosystem1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Automation repository
        uses: actions/checkout@v4
      
      - name: Checkout Helm repository
        uses: actions/checkout@v4  
        with:
          repository: ${{ env.NAMESPACE }}/helm
          path: helm

      - name: Setup helm
        uses: azure/setup-helm@v4.2.0
        with:
          version: '3.13.2' # default is latest (stable)
        id: install
      
      - name: Setup kubeconfig secret
        env: 
          KUBE_CONFIG_PLAN_B_CLUSTER: ${{ secrets.KUBE_CONFIG_PLAN_B_CLUSTER }}
        run: |
          mkdir -p $HOME/.kube
          echo "${{ env.KUBE_CONFIG_PLAN_B_CLUSTER }}" >> $HOME/.kube/config
      
      - name: Uninstall ecosystem1
        run: |
          helm uninstall main-ecosystem --ignore-not-found --namespace=galasa-ecosystem1 --kubeconfig $HOME/.kube/config
      
      # Default timeout is 5m0s. Stating that explicitly so we can change it easily.
      # The install takes a long time because we are waiting for all the pods to start up.
      - name: Install ecosystem1
        run: |
          helm install main-ecosystem ${{ github.workspace }}/helm/charts/ecosystem --namespace=galasa-ecosystem1 --values ${{ github.workspace }}/infrastructure/galasa-plan-b-lon02/galasa-ecosystem1/helm-values.yaml --kubeconfig $HOME/.kube/config --timeout 10m0s --wait

      - name: Test ecosystem1
        run: |
          helm test main-ecosystem --namespace=galasa-ecosystem1 --kubeconfig $HOME/.kube/config

  trigger-next-workflow:
    # Skip this job for forks
    if: ${{ github.repository_owner == 'galasa-dev' }}
    name: Trigger next workflow in the build chain
    needs: [build-helm]
    runs-on: ubuntu-latest

    steps:
      # This workflow runs a single test the CoreManagerIVT to verify the health of the Galasa service.
      - name: Triggering workflow to run CoreManagerIVT
        env:
            GH_TOKEN: ${{ secrets.GALASA_TEAM_GITHUB_TOKEN }}
        run: |
          gh workflow run run-core-test.yaml --repo https://github.com/galasa-dev/automation --ref ${{ env.BRANCH }}

  report-failure:
    # Skip this job for forks
    if: ${{ failure() && github.repository_owner == 'galasa-dev' }}
    name: Report failure in workflow
    runs-on: ubuntu-latest
    needs: build-helm

    steps:
      - name: Report failure in workflow to Slack
        env: 
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run : |
          docker run --rm -v ${{ github.workspace }}:/var/workspace ghcr.io/galasa-dev/galasabld-ibm:main slackpost workflows --repo "automation" --workflowName "${{ github.workflow }}" --workflowRunNum "${{ github.run_id }}" --ref "${{ env.BRANCH }}" --hook "${{ env.SLACK_WEBHOOK }}"