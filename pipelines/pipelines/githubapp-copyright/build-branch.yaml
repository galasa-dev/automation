#
# Copyright contributors to the Galasa project
#
# SPDX-License-Identifier: EPL-2.0
#

apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: branch-githubapp-copyright
  namespace: galasa-build
spec:

  workspaces:
  - name: git-workspace
# 
# 
#
  tasks:

  # 
  # Clone the github depo.
  # 
  - name: clone-githubapp-copyright
    taskRef: 
      name: git-clone
    params:
    - name: url
      value: https://github.com/galasa-dev/githubapp-copyright
    - name: revision
      value: main
    - name: refspec
      value: refs/heads/main:refs/heads/main
    - name: depth
      value: "99999999"
    - name: subdirectory
      value: $(context.pipelineRun.name)/githubapp-copyright
    workspaces:
     - name: output
       workspace: git-workspace 

  #
  # Build the copyright checker source code.
  #
  - name: githubapp-copyright-make
    taskRef: 
      name: make
    runAfter: 
    - clone-githubapp-copyright
    params:
    - name: directory
      value: $(context.pipelineRun.name)/githubapp-copyright
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  # 
  # Assemble into a container image.
  #
  - name: docker-build-githubapp-copyright
    taskRef:
      name: docker-build
    runAfter:
    - githubapp-copyright-make
    params:
    - name: pipelineRunName
      value: $(context.pipelineRun.name)
    - name: context
      value: $(context.pipelineRun.name)/githubapp-copyright
    - name: dockerfilePath
      value: githubapp-copyright/Dockerfile
    - name: imageName
      value: harbor.galasa.dev/galasadev/galasa-copyright:latest
    - name: noPush
      value: ""
    workspaces:
     - name: git-workspace
       workspace: git-workspace

  # 
  # Assemble into a container image.
  #
  - name: recycle-deployment
    taskRef:
      name: argocd-cli
    runAfter:
    - docker-build-githubapp-copyright
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - actions 
      - run 
      - github-copyright
      - restart 
      - --kind 
      - Deployment
      - --resource-name
      - githubappcopyright

  #----------------------------------------------------------------
  - name: wait-for-recycle-to-complete
    taskRef:
      name: argocd-cli
    runAfter:
    - recycle-deployment
    params:
    - name: server
      value: argocd.galasa.dev
    - name: command
      value: 
      - app 
      - wait
      - github-copyright
      - --resource
      - apps:Deployment:githubappcopyright
      - --health    
     
  finally:
  - name: report-failed-build
    when:
      - input: "$(tasks.status)"
        operator: in
        values: ["Failed"]
    taskRef:
      name: slack-post
    params:
    - name: pipelineName
      value: $(context.pipeline.name)
    - name: pipelineRunName
      value: $(context.pipelineRun.name)